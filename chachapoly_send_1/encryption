/*

*/
#include <Crypto.h>
#include <ChaChaPoly.h>
#include <string.h>
#if defined(ESP8266) || defined(ESP32)
#include <pgmspace.h>
#else
#include <avr/pgmspace.h>
#endif

#define MAX_PLAINTEXT_LEN 8
ChaChaPoly chachapoly;

void setup() {
  Serial.begin(9600);

  Serial.println();

  Serial.print("State Size ... ");
  Serial.println(sizeof(ChaChaPoly));
  Serial.println();
  uint8_t key[32] = {0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
          0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
          0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
          0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f};
  uint8_t iv[16]={0x07, 0x00, 0x00, 0x00, 0x40, 0x41, 0x42, 0x43,
      0x44, 0x45, 0x46, 0x47};
  chachapoly.clear();
  chachapoly.setKey(key, 32);
  chachapoly.setIV(iv, 12);
  
  byte buffer[MAX_PLAINTEXT_LEN];
  memset(buffer, 0xba, sizeof(buffer));
  uint8_t authdata[1] = {0x01};
  uint8_t tag[2];
  uint8_t after_tag[2];
  uint8_t complete_tag[16] ={0x1a, 0xe1, 0x0b, 0x59, 0x4f, 0x09, 0xe2, 0x6a,
                    0x7e, 0x90, 0x2e, 0xcb, 0xd0, 0x60, 0x06, 0x91};
  uint8_t plaintext[MAX_PLAINTEXT_LEN] = {0x4c, 0x61, 0x64, 0x69,0x59,0x4f,0,0};
  
  chachapoly.addAuthData(authdata, 1);
  //encrypting 6 bytes of data; adding tag inside last two bytes
  chachapoly.encrypt(buffer, plaintext, 6);
  size_t i;
  
  chachapoly.computeTag(tag, sizeof(tag));
  for(i=0;i<2;i+=1){
    Serial.print(tag[i], HEX);
    buffer[6+i] = tag[i];
  };
  Serial.println();
  Serial.println("Done with tag");
  for(i=0;i<8;i+=1){
    Serial.print(buffer[i], HEX);
  }
  Serial.println();
  Serial.println("Done with buffer");
  
  // if (memcmp(buffer, ciphertext, MAX_PLAINTEXT_LEN) != 0) {
  //     Serial.print(buffer[0], HEX);
  //     Serial.print("->");
  //     Serial.print(ciphertext[0], HEX);
  
  // }
  
  // if (memcmp(tag, complete_tag, 16) != 0) {
  //     Serial.print("computed wrong tag ... ");
      
  // }
  chachapoly.setKey(key, 32);
  chachapoly.setIV(iv, 12);
  byte decrypt_buffer[MAX_PLAINTEXT_LEN];
  memset(decrypt_buffer, 0xba, MAX_PLAINTEXT_LEN);
  chachapoly.addAuthData(authdata, 1);
  chachapoly.decrypt(decrypt_buffer, buffer, 6);
  Serial.println();
  for(i=0;i<6;i+=1){
    Serial.print(decrypt_buffer[i], HEX);
  };
  after_tag[0] = buffer[6];
  after_tag[1] = buffer[7];
  
  if (!chachapoly.checkTag(after_tag, sizeof(after_tag))) {
    Serial.print("tag did not check ... ");
    //return false;
  };
  
  

}

void loop() {
  
}
